const TelegramBot = require("node-telegram-bot-api");

// —Ç–æ–∫–µ–Ω –∏–∑ BotFather (–æ–Ω —É —Ç–µ–±—è —É–∂–µ –≤ Render –≤ ENV)
const token = process.env.BOT_TOKEN;

const bot = new TelegramBot(token, { polling: true });

// –∫–æ–º–∞–Ω–¥–∞ /start
bot.onText(/\/start/, (msg) => {
  bot.sendMessage(msg.chat.id, "–ü—Ä–∏–≤–µ—Ç! –Ø –±–æ—Ç –¥–ª—è –∑–∞–ø–∏—Å–∏ üòä\n–ù–∞–ø–∏—à–∏ '–∑–∞–ø–∏—Å–∞—Ç—å—Å—è', —á—Ç–æ–±—ã –≤—ã–±—Ä–∞—Ç—å –≤—Ä–µ–º—è.");
});

// –æ–±—Ä–∞–±–æ—Ç–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏–π
bot.on("message", (msg) => {
  const text = msg.text?.toLowerCase();

  // –µ—Å–ª–∏ —á–µ–ª–æ–≤–µ–∫ –Ω–∞–ø–∏—Å–∞–ª "–∑–∞–ø–∏—Å–∞—Ç—å—Å—è"
  if (text && text.includes("–∑–∞–ø–∏—Å–∞—Ç—å—Å—è")) {
    bot.sendMessage(msg.chat.id, "–í—ã–±–µ—Ä–∏—Ç–µ –≤—Ä–µ–º—è:", {
      reply_markup: {
        keyboard: [["10:00", "12:00"], ["14:00", "16:00"]],
        resize_keyboard: true,
        one_time_keyboard: true,
      },
    });
  }

  // –æ–±—Ä–∞–±–æ—Ç–∫–∞ –≤—ã–±–æ—Ä–∞ –≤—Ä–µ–º–µ–Ω–∏
  if (["10:00", "12:00", "14:00", "16:00"].includes(text)) {
    bot.sendMessage(msg.chat.id, `–í—ã –∑–∞–ø–∏—Å–∞–Ω—ã –Ω–∞ ${text} ‚úÖ`, {
      reply_markup: { remove_keyboard: true },
    });
  }
});
